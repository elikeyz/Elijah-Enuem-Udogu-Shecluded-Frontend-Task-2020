{"version":3,"sources":["store/sagas/lotrSaga.js","store/constants/index.js","store/sagas/catsSaga.js","store/sagas/index.js","store/reducers/lotrReducer.js","store/reducers/catsReducer.js","store/reducers/index.js","store/index.js","components/Header/index.js","pages/Home/index.js","store/actions/lotrAction.js","store/actions/catsAction.js","components/CatCard/index.js","pages/Cats/index.js","components/LotrCard/index.js","pages/Lotr/index.js","App.js","serviceWorker.js","index.js"],"names":["lotrSaga","lotrWatcher","call","axios","get","process","REACT_APP_LOTR_BASE_URL","headers","Authorization","REACT_APP_LOTR_API_KEY","docs","data","put","type","error","takeLatest","dotenv","config","catsSaga","catsWatcher","page","REACT_APP_CATS_BASE_URL","encodeURIComponent","REACT_APP_CATS_API_KEY","cats","rootSaga","all","initialState","characters","isLoading","lotrReducer","state","action","catsReducer","combineReducers","lotr","sagaMiddleware","createSagaMiddleware","composeArgs","applyMiddleware","store","createStore","rootReducer","compose","run","Header","Navbar","collapseOnSelect","bg","variant","expand","to","Brand","Toggle","aria-controls","Collapse","className","id","Nav","Home","Container","Date","getFullYear","getLotr","getCats","CatCard","cat","Card","Img","src","url","breeds","length","Body","name","Text","description","temperament","life_span","shedding_level","dog_friendly","child_friendly","Cats","props","goToPreviousPage","bind","goToNextPage","this","Pagination","Prev","disabled","onClick","Next","Spinner","animation","role","Toast","Row","map","Col","key","md","sm","xs","Component","connect","dispatch","bindActionCreators","LotrCard","character","Subtitle","race","gender","realm","birth","spouse","death","Button","href","wikiUrl","text","target","rel","Lotr","lowestPageItem","highestPageItem","setState","slice","_id","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.960e38de.chunk.js","sourcesContent":["import { put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\nimport { GET_LOTR_STARTED, GET_LOTR_SUCCESS, GET_LOTR_FAILED } from '../constants';\n\ndotenv.config();\n\nfunction* lotrSaga() {\n    try {\n        const { data: { docs } } = yield call(axios.get, `${process.env.REACT_APP_LOTR_BASE_URL}/v1/character`, {\n            headers: {\n                Authorization: `Bearer ${process.env.REACT_APP_LOTR_API_KEY}`\n            }\n        });\n        yield put({\n            type: GET_LOTR_SUCCESS,\n            data: docs\n        });\n    } catch(error) {\n        yield put({\n            type: GET_LOTR_FAILED,\n            error\n        })\n    }\n}\n\nexport function* lotrWatcher() {\n    yield takeLatest(GET_LOTR_STARTED, lotrSaga);\n}","export const GET_LOTR_STARTED = 'GET_LOTR_STARTED';\nexport const GET_LOTR_SUCCESS = 'GET_LOTR_SUCCESS';\nexport const GET_LOTR_FAILED = 'GET_LOTR_FAILED';\n\nexport const GET_CATS_STARTED = 'GET_CATS_STARTED';\nexport const GET_CATS_SUCCESS = 'GET_CATS_SUCCESS';\nexport const GET_CATS_FAILED = 'GET_CATS_FAILED';","import { put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\nimport { GET_CATS_STARTED, GET_CATS_SUCCESS, GET_CATS_FAILED } from '../constants';\n\ndotenv.config();\n\nfunction* catsSaga({ page }) {\n    try {\n        const { data } = yield call(axios.get, `${process.env.REACT_APP_CATS_BASE_URL}/v1/images/search?size=small&order=RANDOM&limit=24&page=${encodeURIComponent(page)}`, {\n            headers: { 'x-api-key': process.env.REACT_APP_CATS_API_KEY }\n        });\n        yield put({ type: GET_CATS_SUCCESS, cats: data, page });\n    } catch(error) {\n        yield put({ type: GET_CATS_FAILED, error });\n    }\n}\n\nexport function* catsWatcher() {\n    yield takeLatest(GET_CATS_STARTED, catsSaga);\n}","import { all } from 'redux-saga/effects';\nimport { lotrWatcher } from './lotrSaga';\nimport { catsWatcher } from './catsSaga';\n\nexport default function* rootSaga() {\n    yield all([\n        lotrWatcher(),\n        catsWatcher()\n    ]);\n}","import { GET_LOTR_STARTED, GET_LOTR_SUCCESS, GET_LOTR_FAILED } from '../constants';\n\nconst initialState = {\n    error: '',\n    characters: [],\n    isLoading: false\n}\n\nconst lotrReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_LOTR_STARTED:\n            return { ...state, isLoading: true, error: '' };\n        case GET_LOTR_SUCCESS:\n            return { ...state, isLoading: false, characters: action.data };\n        case GET_LOTR_FAILED:\n            return { ...state, isLoading: false, error: action.error };\n        default:\n            return state;\n    }\n};\n\nexport default lotrReducer;","import { GET_CATS_STARTED, GET_CATS_SUCCESS, GET_CATS_FAILED } from '../constants';\n\nconst initialState = {\n    error: '',\n    cats: [],\n    page: 0,\n    isLoading: false\n};\n\nconst catsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_CATS_STARTED:\n            return { ...state, isLoading: true, error: '' };\n        case GET_CATS_SUCCESS:\n            return { ...state, isLoading: false, cats: action.cats, page: action.page };\n        case GET_CATS_FAILED:\n            return { ...state, isLoading: false, error: action.error };\n        default:\n            return state;\n    }\n};\n\nexport default catsReducer;","import { combineReducers } from 'redux';\nimport lotrReducer from './lotrReducer';\nimport catsReducer from './catsReducer';\n\nexport default combineReducers({\n    lotr: lotrReducer,\n    cats: catsReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nimport rootReducer from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeArgs = [applyMiddleware(sagaMiddleware)];\n\nif ((process.env.NODE_ENV === 'development') && (window.__REDUX_DEVTOOLS_EXTENSION__)) {\n    composeArgs.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nconst store = createStore(\n    rootReducer,\n    compose(...composeArgs)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header>\n            <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"sm\">\n                <Link to=\"/\">\n                    <Navbar.Brand>Frontend Task</Navbar.Brand>\n                </Link>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-sm-2\">\n                        <Link className=\"nav-link\" to=\"/cats\">Cats</Link>\n                        <Link className=\"nav-link\" to=\"/lotr\">Lord Of The Rings</Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport './home.scss';\n\nfunction Home() {\n    return (\n        <>\n            <main className=\"landing-container\">\n                <Container>\n                    <h1>Welcome to Frontend Task</h1>\n                    <p>Built by Elijah Enuem-Udogu</p>\n                </Container>\n            </main>\n            <footer className=\"landing-footer\">\n                <small>Copyright {new Date().getFullYear()}, All Rights Reserved</small>\n            </footer>\n        </>\n    );\n}\n\nexport default Home;","import { GET_LOTR_STARTED } from '../constants';\n\nexport const getLotr = () => ({\n    type: GET_LOTR_STARTED\n});","import { GET_CATS_STARTED } from '../constants';\n\nexport const getCats = (page) => ({\n    type: GET_CATS_STARTED,\n    page\n});","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nfunction CatCard({ cat }) {\n    return (\n        <article className=\"card bg-secondary\">\n            <Card.Img variant=\"top\" src={cat.url} />\n            {cat.breeds.length > 0 && (\n                <Card.Body>\n                    <h2 className=\"card-title h5\">{cat.breeds[0].name}</h2>\n                    <Card.Text>{cat.breeds[0].description}</Card.Text>\n                    <Card.Text><strong>Temperament: </strong>{cat.breeds[0].temperament}</Card.Text>\n                    <Card.Text><strong>Life Span: </strong>{cat.breeds[0].life_span} years</Card.Text>\n                    <Card.Text><strong>Shedding Level: </strong>{cat.breeds[0].shedding_level}</Card.Text>\n                    <Card.Text><strong>Dog Friendly: </strong>{cat.breeds[0].dog_friendly}</Card.Text>\n                    <Card.Text><strong>Child Friendly: </strong>{cat.breeds[0].child_friendly}</Card.Text>\n                </Card.Body>\n            )}\n        </article>\n    );\n}\n\nexport default CatCard;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Toast from 'react-bootstrap/Toast';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getCats } from '../../store/actions';\nimport CatCard from '../../components/CatCard';\n\nclass Cats extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.goToPreviousPage = this.goToPreviousPage.bind(this);\n        this.goToNextPage = this.goToNextPage.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getCats(this.props.page);\n    }\n\n    goToPreviousPage() {\n        this.props.getCats(this.props.page - 1);\n    }\n\n    goToNextPage() {\n        this.props.getCats(this.props.page + 1);\n    }\n\n    render() {\n        return (\n            <main>\n                <Container>\n                    <h1>Cats</h1>\n                    <hr className=\"bg-light\" />\n                    <Pagination>\n                        {this.props.page <= 0 && (<Pagination.Prev className=\"mr-2\" disabled />)}\n                        {this.props.page > 0 && (<Pagination.Prev onClick={this.goToPreviousPage} className=\"mr-2\" />)}\n                        {this.props.cats.length > 0 && (<Pagination.Next onClick={this.goToNextPage} className=\"ml-2\" />)}\n                        {this.props.cats.length <=0 && (<Pagination.Next className=\"ml-2\" disabled />)}\n                    </Pagination>\n                    <p>Showing Page {this.props.page + 1}</p>\n                    {this.props.isLoading && (<>\n                        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    </>)}\n                    {\n                        this.props.error && (\n                        <Toast>\n                        <Toast.Header>\n                            <strong>Error</strong>\n                        </Toast.Header>\n                        <Toast.Body>{this.props.error}</Toast.Body>\n                        </Toast>\n                        )\n                    }\n                    <Row>\n                        {this.props.cats.map((cat) => (\n                            <Col key={cat.id} md={4} sm={6} xs={12} className=\"mb-3\">\n                                <CatCard cat={cat} />\n                            </Col>\n                        ))}\n                    </Row>\n                </Container>\n            </main>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    cats: state.cats.cats,\n    error: state.cats.error,\n    isLoading: state.cats.isLoading,\n    page: state.cats.page\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        getCats\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cats);","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nfunction LotrCard({ character }) {\n    return (\n        <Card bg=\"secondary\">\n            <article className=\"card-body\">\n                <h2 className=\"card-title h5\">{character.name}</h2>\n                <Card.Subtitle className=\"mb-2\">{character.race} - {character.gender}</Card.Subtitle>\n                <Card.Text>From the realm of {character.realm}</Card.Text>\n                <Card.Text>Born in {character.birth}</Card.Text>\n                <Card.Text>Married to {character.spouse}</Card.Text>\n                <Card.Text>Died in {character.death}</Card.Text>\n                <Button href={character.wikiUrl} variant=\"light\" text=\"dark\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn-block\">Learn More</Button>\n            </article>\n        </Card>\n    );\n}\n\nexport default LotrCard;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Toast from 'react-bootstrap/Toast';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getLotr } from '../../store/actions';\nimport LotrCard from '../../components/LotrCard';\n\nclass Lotr extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lowestPageItem: 1,\n            highestPageItem: 24\n        };\n\n        this.goToPreviousPage = this.goToPreviousPage.bind(this);\n        this.goToNextPage = this.goToNextPage.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getLotr();\n    }\n\n    goToPreviousPage() {\n        if (this.state.lowestPageItem - 24 < 1) {\n            this.setState({\n                lowestPageItem: 1,\n                highestPageItem: 24\n            });\n        } else {\n            this.setState({\n                lowestPageItem: this.state.lowestPageItem - 24,\n                highestPageItem: this.state.highestPageItem - 24\n            });\n        }\n    }\n\n    goToNextPage() {\n        if (this.state.highestPageItem + 24 > this.props.characters.length) {\n            this.setState({\n                lowestPageItem: this.props.characters.length - ((this.props.characters.length % 24) - 1),\n                highestPageItem: this.props.characters.length\n            });\n        } else {\n            this.setState({\n                lowestPageItem: this.state.lowestPageItem + 24,\n                highestPageItem: this.state.highestPageItem + 24\n            });\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <Container>\n                    <h1>Lord Of The Rings</h1>\n                    <hr className=\"bg-light\" />\n                    <Pagination>\n                        {this.state.lowestPageItem <= 1 && (<Pagination.Prev className=\"mr-2\" disabled />)}\n                        {this.state.lowestPageItem > 1 && (<Pagination.Prev onClick={this.goToPreviousPage} className=\"mr-2\" />)}\n                        {this.state.highestPageItem < this.props.characters.length && (<Pagination.Next onClick={this.goToNextPage} className=\"ml-2\" />)}\n                        {this.state.highestPageItem >= this.props.characters.length && (<Pagination.Next className=\"ml-2\" disabled />)}\n                    </Pagination>\n                    <p>Showing {this.state.lowestPageItem} - {this.state.highestPageItem} of {this.props.characters.length} results</p>\n                    {this.props.isLoading && (<>\n                        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    </>)}\n                    {\n                        this.props.error && (\n                        <Toast>\n                        <Toast.Header>\n                            <strong>Error</strong>\n                        </Toast.Header>\n                        <Toast.Body>{this.props.error}</Toast.Body>\n                        </Toast>\n                        )\n                    }\n                    <Row>\n                        {this.props.characters.slice(this.state.lowestPageItem - 1, this.state.highestPageItem).map(character => (\n                            <Col key={character._id} md={4} sm={6} xs={12} className=\"mb-3\">\n                                <LotrCard character={character} />\n                            </Col>\n                        ))}\n                    </Row>\n                </Container>\n            </main>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    characters: state.lotr.characters,\n    error: state.lotr.error,\n    isLoading: state.lotr.isLoading\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        getLotr\n    }, dispatch)\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lotr);","import React from 'react';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Cats from './pages/Cats';\nimport Lotr from './pages/Lotr';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/cats\" component={Cats} />\n        <Route exact path=\"/lotr\" component={Lotr} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}